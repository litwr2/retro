INTR23:         PUSH    DS
                PUSH    AX
                MOV     AX,SEG_DATA
                MOV     DS,AX
                INC     [BREAK_FLAG]
                POP     AX
                POP     DS
                IRET

INTR24:         MOV     AL,3
                IRET

SET_INTR24:     MOV     AX,3524H        ;SAVE/SET INTR24 VECTOR
                INT     21H
                MOV     [SAVE24LO],BX
                MOV     [SAVE24HI],ES
                PUSH    DS
                PUSH    CS
                POP     DS
                MOV     DX,INTR24
.L1:            MOV     AX,2524H
                INT     21H
                POP     DS
                RETN

RESTORE_INTR24: MOV     DX,[SAVE24LO]   ;RESTORE INTR24 VECTOR
                PUSH    DS
                MOV     DS,[SAVE24HI]
                JMP     SET_INTR24.L1

SET_INTR23:     MOV     AX,3523H        ;SAVE/SET INTR23 VECTOR
                INT     21H
                MOV     [SAVE23LO],BX
                MOV     [SAVE23HI],ES
                PUSH    DS
                PUSH    CS
                POP     DS
                MOV     DX,INTR23
.L1:            MOV     AX,2523H
                INT     21H
                POP     DS
                RETN

RESTORE_INTR23: MOV     DX,[SAVE23LO]   ;RESTORE INTR23 VECTOR
                PUSH    DS
                MOV     DS,[SAVE23HI]
                JMP     SET_INTR23.L1

FINISHIBM:      CALL    RESET_DS

        IF IEC8DEBUG > 0
                MOV AH,3EH
                MOV BX,[XXXFH]
                INT 21H
        END IF
                CALL    IEC8FLUSH
                CALL    IEC9FLUSH
                CALL    DEV1DETACH
                CALL    DEV8DETACH
                CALL    DEV9DETACH

                XOR     AX,AX           ;RESTORE LED
                MOV     ES,AX
                MOV     AL,[ES:417H]
                AND     AL,0CFH
                OR      AL,[KBD_FLAGS]
                MOV     [ES:417H],AL
                AND     AL,70H
                MOV     [LED],AL
                CALL    SET_LED

                CALL    RESTORE_INTR9
                CALL    RESTORE_INTR8
                CALL    [EXIT_SOUND]
                CALL    RESTORE_INTR24
                CALL    RESTORE_INTR23

                MOV     DL,[SAVE_FPATH]   ;RESTORE STARTUP PATH & DRIVE
                MOV     AH,0EH
                SUB     DL,'A'
                INT     21H

                MOV     AH,3BH
                MOV     DX,SAVE_FPATH
                INT     21H

                MOV     AX,3            ;SET TEXT VIDEO MODE
                INT     10H

                MOV     EAX,[RETRACE_COUNT]
                MOV     EDX,11931800/TIMERV
                MUL     EDX
                DIV     [SYNCHRO_TICKS]
                SHL     EDX,1
                CMP     EDX,[SYNCHRO_TICKS]
                JB      .L1

                INC     EAX
.L1:            CALL    HEX2DEC
                MOV     EAX,DWORD [HEX2DECBUF+6]
                MOV     WORD [FMSG+44],AX
                SHR     EAX,16
                MOV     [FMSG+46],AL
                MOV     [FMSG+48],AH

                MOV     DX,AMSG         ;OUTPUT AUTHOR'S MESSAGE
                MOV     AH,9
                INT     21H

                MOV     DX,FMSG         ;OUTPUT AUTHOR'S MESSAGE
                MOV     AH,9
                INT     21H
                RETN

INITIBM:        CLD
                MOV     AH,30H          ;TEST DOS VERSION
                INT     21H
                XCHG    AL,AH
                CMP     AX,31EH         ;DOS >= 3.30
                JNC     .L3

                MOV     DX,ERROR1
                MOV     AH,9
                INT     21H
                POP     AX              ;EXIT!!!
                RETF

.L3:            XOR     AX,AX           ;TEST MOUSE PRESENCE
                INT     33H
                MOV     [ISMOUSE],AL

        IF IEC8DEBUG > 0
                MOV AH,3CH
                MOV CX,20H
                MOV DX,XXXFN
                INT 21H
                MOV [XXXFH],AX
        END IF

                XOR     EBX,EBX         ;INIT 32-BIT REGISTERS
                XOR     ESI,ESI
                XOR     ECX,ECX
                XOR     EDI,EDI
                XOR     ECX,ECX
                XOR     EBP,EBP

                MOV     AX,3D00H
                MOV     DX,CFGFILE
                INT     21H
                JC      .L6

                MOV     BX,AX
                MOV     AH,3FH
                MOV     CX,3
                MOV     DX,KBD_BUF
                INT     21H

                MOV     AH,3EH
                INT     21H

                MOV     AX,WORD [KBD_BUF]
                MOV     [VIDMODE],AL
                MOV     [FRAMESKIP],AH
                MOV     AL,[KBD_BUF+2]
                OR      [SJCFG],AL

.L6:            CALL    INIT_VIDEO

                MOV     AX,SEG_RAM      ;INIT FS
                MOV     FS,AX

                CALL    SET_VMODE       ;SET VIDEO MODE
                CALL    SET_INTR23
                CALL    SET_INTR24
                CALL    SET_INTR9
                CALL    SET_INTR8

                MOVZX   BX,[SJCFG]
                AND     BL,3
                CALL    [SOUND_SRC+EBX*2]
                CALL    [RESET_SOUND]

                MOV     AL,[SJCFG]
                MOV     AH,AL
                SHR     AL,5
                SHR     AH,2
                AND     AH,7
                MOV     WORD [JOY1_ST],AX
                CALL    INIT_JOY

                XOR     SI,SI           ;LOAD ROMs
                MOV     DI,SEG_ROM
.L2:            MOV     AX,3D00H
                LEA     DX,[ROMS_FN+SI]
                INT     21H
                JC      .L5

                MOV     BX,AX
                MOV     AX,4202H
                XOR     CX,CX
                XOR     DX,DX
                INT     21H
                OR      DX,DX
                JNZ     .L1

                CMP     AX,16*1024
                JNZ     .L1

                MOV     AX,4200H
                INT     21H
                PUSH    DS
                MOV     AH,3FH
                MOV     CX,16*1024
                XOR     DX,DX
                MOV     DS,DI
                INT     21H
                POP     DS
.L1:            MOV     AH,3EH
                INT     21H
.L5:            ADD     SI,11
                ADD     DI,400H
                CMP     SI,11*8
                JNZ     .L2

                MOV     AH,47H          ;SAVE STARTUP PATH & DRIVE
                MOV     SI,SAVE_FPATH+3
                XOR     DL,DL
                INT     21H
                MOV     AH,19H
                INT     21H
                ADD     AL,41H
                MOV     [SAVE_FPATH],AL
                MOV     [FPATH],AL      ;+ SET CURRENT DRIVE LETTER
                MOV     AX,':\'
                MOV     WORD [SAVE_FPATH+1],AX
                MOV     WORD [FPATH+1],AX

                XOR     AX,AX
                MOV     ES,AX
                MOV     AL,[ES:417H]
                MOV     [KBD_FLAGS],AL
                AND     [KBD_FLAGS],30H
                AND     BYTE [ES:417H],0CFH
                AND     AL,40H
                JZ      .L4

                AND     [KMATRIX+1],7FH
.L4:            MOV     [LED],AL
                CALL    SET_LED

                MOV     AX,0A000H       ;? Init ES For TED
                MOV     ES,AX

                MOV     [TOTALTICKS],0

                CALL    GET_DRVS        ;INIT MENUS
                CALL    GET_FPATH
                CALL    INIT_WIN1
                JMP     FILL_IBM_FLIST

INIT_VIDEO:     MOV     AX,SEG_VRAM1
                MOV     ES,AX
                XOR     DI,DI
                MOV     AX,4F00H
                INT     10H

                CMP     AX,4FH
                JNE     .EXIT

                LFS     BP,[ES:0EH]     ;TO VIDEO MODES LIST
                TEST    BYTE [ES:0AH],2 ;VGA COMPATIBILITY
                JE      .VBE

                XOR     BX,BX
.L6:            IMUL    SI,BX,15
                MOV     [M3_MSG16+16+SI],' '
                INC     BX
                CMP     BL,VBESWITCH
                JB      .L6

.VBE:           CMP     WORD [ES:4],0           ;VBE VER
                JE      .EXIT

                MOV     DI,512
                XOR     BX,BX
.L3:            PUSH    BP
                IMUL    SI,BX,15
.L4:            MOV     CX,[FS:BP]
                ADD     BP,2
                CMP     CX,0FFFFH
                JZ      .L5

                MOV     AX,4F01H
                INT     10H

                MOV     EAX,[VIDIDS+EBX*4]
                CMP     EAX,[ES:512+12H]        ;X, Y RES
                JNZ     .L4

                CMP     BYTE [ES:512+19H],8     ;BITS PER PIXEL
                JNZ     .L4

                CMP     BYTE [ES:512+1BH],4     ;MEMORY MODEL TYPE
                JNZ     .L4

                CMP     WORD [ES:512+4],40H     ;WINDOWS GRANULARITY
                JNZ     .L4

                MOV     EAX,[ES:512+0CH]        ;WINPOS FUNCTION
                OR      EAX,EAX
                JZ      .L4

                XCHG    EAX,[VBECSWF]
                OR      EAX,[VBECSWF]
                CMP     EAX,[VBECSWF]
                JNZ     .L4

                MOV     [VBEMODEN+EBX*2],CX     ;MODE #
                MOV     [M3_MSG16+15*VBESWITCH+16+SI],'+'
.L5:            POP     BP
                INC     BX
                CMP     BL,MAXVIDMODEN-VBESWITCH
                JB      .L3

.EXIT:          RETN

