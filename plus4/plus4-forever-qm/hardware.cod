INTR23:         PUSH    DS
                PUSH    AX
                MOV     AX,SEG SEG_DATA
                MOV     DS,AX
                INC     BREAK_FLAG
                POP     AX
                POP     DS
                IRET

SET_INTR23:     MOV     AX,3523H        ;SAVE/SET INTR23 VECTOR
                INT     21H
                MOV     SAVE23LO,BX
                MOV     SAVE23HI,ES
                PUSH    DS
                PUSH    CS
                POP     DS
                LEA     DX,CS:INTR23
SI23_L1:        MOV     AX,2523H
                INT     21H
                POP     DS
                RETN

RESTORE_INTR23: MOV     DX,SAVE23LO      ;RESTORE INTR23 VECTOR
                PUSH    DS
                MOV     DS,SAVE23HI
                JMP     SHORT SI23_L1

SET_VMODE:      MOV     AX,13H
                INT     10H
                CLI
                MOV     DX,3CEH ;SET 128KB VIDEO RAM MODE
                MOV     AL,6
                OUT     DX,AL
                MOV     AH,AL
                INC     DX
                IN      AL,DX
                AND     AL,0F3H
                XCHG    AL,AH
                DEC     DX
                OUT     DX,AX
                XOR     AX,AX   ;PROVIDE ACCESS TO THE CRTC REGISTERS
                MOV     ES,AX
                MOV     DX,ES:463H
                MOV     AL,11H
                OUT     DX,AL
                MOV     AH,AL
                INC     DX
                IN      AL,DX
                MOV     BL,AL
                ;AND     AL,7FH
                ;XCHG    AL,AH
                DEC     DX
                ;OUT     DX,AX           ;DISABLE WRITE PROTECTION
                ;MOV     AX,5101H        ;SET THE HORIZONTAL REGISTERS
                ;OUT     DX,AX
                ;MOV     AX,5202H
                ;OUT     DX,AX
                ;MOV     AX,2A13H
                ;OUT     DX,AX
                MOV     AX,0A210H       ;SET THE VERTICAL REGISTERS
                OUT     DX,AX
                MOV     AX,9D12H
                OUT     DX,AX
                MOV     AX,0A015H
                OUT     DX,AX
                MOV     AL,11H
                MOV     AH,BL
                AND     AH,0F0H
                OR      AH,4
                OUT     DX,AX
                STI
                RETN

FINISHIBM:      XOR     AX,AX           ;RESTORE LED
                MOV     ES,AX
                MOV     AL,ES:[417H]
                AND     AL,0CFH
                OR      AL,KBD_FLAGS
                MOV     ES:[417H],AL
                AND     AL,70H
                MOV     LED,AL
                CALL    SET_LED

                CALL    RESTORE_INTR9
                CALL    RESTORE_INTR8
                CALL    RESTORE_INTR23

                CALL    RESET_DS
                CALL    [RESET_SOUND]

                MOV     DL,SAVE_FPATH   ;RESTORE STARTUP PATH & DRIVE
                MOV     AH,0EH
                SUB     DL,'A'
                INT     21H
                MOV     AH,3BH
                LEA     DX,SAVE_FPATH
                INT     21H

                MOV     AX,3            ;SET TEXT VIDEO MODE
                INT     10H

                MOV     EAX,RETRACE_COUNT
                XOR     EDX,EDX
                IMUL    EAX,182
                DIV     CS:TIMER_TICKS
                SHL     EDX,1
                CMP     EDX,CS:TIMER_TICKS
                JB      SHORT X_ML1
                INC     EAX
X_ML1:          CALL    HEX2DEC
                MOV     EAX,DWORD PTR D_BUF1 +7
                MOV     WORD PTR FMSG +44,AX
                SHR     EAX,16
                MOV     FMSG +47,AL

                LEA     DX,FMSG         ; OUTPUT AUTHOR'S MESSAGE
                MOV     AH,9
                INT     21H
                RETN

INITIBM:        CLD
                MOV     AX,SEG SEG_RAM  ; INIT FS
                MOV     FS,AX

                LEA     DX,AMSG         ; OUTPUT AUTHOR'S MESSAGE
                MOV     AH,9
                INT     21H

                MOV     AH,30H          ; TEST DOS VERSION
                INT     21H
                XCHG    AL,AH
                CMP     AX,31EH         ; DOS >= 3.30
                JNC     SHORT LT_3
                LEA     DX,ERROR1
LYY6:           MOV     AH,9
                INT     21H
                POP     AX              ;EXIT!!!
                RETF

LT_3:           XOR     AX,AX           ;TEST MOUSE PRESENCE
                INT     33H
                MOV     ISMOUSE,AL

                CALL    SET_INTR9
                CALL    SET_INTR8
                CALL    SET_INTR23

                XOR     AX,AX
                MOV     ES,AX
                MOV     AL,ES:[417H]
                MOV     KBD_FLAGS,AL
                AND     KBD_FLAGS,30H
                AND     BYTE PTR ES:[417H],0CFH
                AND     AL,40H
                JZ      SHORT LT_4
                AND     KMATRIX+1,7FH
LT_4:           MOV     LED,AL
                CALL    SET_LED

                CALL    SET_VMODE       ;SET VIDEO MODE

                PUSH    DS              ;INIT DAC = SET PALETTE
                POP     ES
                XOR     BX,BX
                MOV     CX,128
                MOV     AX,1012H
                LEA     DX,DAC_T
                INT     10H
                MOV     BX,CX
                MOV     AX,1012H
                INT     10H

                XOR     EBX,EBX         ;INIT TED
                XOR     ESI,ESI
                XOR     ECX,ECX
                XOR     EDI,EDI
                MOV     AX,0A000H
                XOR     ECX,ECX
                MOV     ES,AX

                CALL    INIT_JOY

                XOR     SI,SI           ;LOAD ROMs
                MOV     DI,SEG SEG_ROM
LT_2:           MOV     AX,3D00H
                LEA     DX,ROMS_FN[SI]
                INT     21H
                JC      SHORT LT_5
                MOV     BX,AX
                MOV     AX,4202H
                XOR     CX,CX
                XOR     DX,DX
                INT     21H
                OR      DX,DX
                JNZ     SHORT LT_1
                CMP     AX,16*1024
                JNZ     SHORT LT_1
                MOV     AX,4200H
                INT     21H
                PUSH    DS
                MOV     AH,3FH
                MOV     CX,16*1024
                XOR     DX,DX
                MOV     DS,DI
                INT     21H
                POP     DS
LT_1:           MOV     AH,3EH
                INT     21H
LT_5:           ADD     SI,11
                ADD     DI,400H
                CMP     SI,11*8
                JNZ     SHORT LT_2

                MOV     AH,47H          ; SAVE STARTUP PATH & DRIVE
                LEA     SI,SAVE_FPATH+3
                XOR     DL,DL
                INT     21H
                MOV     AH,19H
                INT     21H
                ADD     AL,41H
                MOV     SAVE_FPATH,AL
                MOV     FPATH,AL        ; + SET CURRENT DRIVE LETTER
                MOV     AX,'\:'
                MOV     WORD PTR SAVE_FPATH+1,AX
                MOV     WORD PTR FPATH+1,AX

                CALL    [RESET_SOUND]
                CALL    GET_DRVS        ; INIT MENUS
                CALL    GET_FPATH
INIT_WIN1:      MOV     AX,TOT_DRVS
                CMP     AX,LIST_CAP1
                JB      SHORT INIT_WIN1_L1
                DEC     AX
INIT_WIN1_L1:   MOV     CP_IN_WIN1,AL
                XOR     AX,AX
                MOV     WIN_POS1,AX
                RETN

                
