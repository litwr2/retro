MAIN_ISCR:      MOV     DI,160*3+23*2
                MOV     CX,15
                MOV     BX,1
                MOV     SI,M3_MSG3
                CALL    OUT_MSG
                MOV     DI,160*5+27*2
                MOV     CL,7
                INC     BX
                MOV     SI,M3_MSG1
                CALL    OUT_MSG
                CALL    SHOWM
                CALL    IFN_ISCR
                CALL    HIDEM
                JMP     CUROFF

IFN_ISCR:       MOV     DI,160*6+28*2   ;OUT: BX
                MOV     DX,61CH
                MOV     SI,DI
.L1:            PUSH    DX
                CALL    WAITM
                POP     DX
                TEST    BL,2
                JNZ     .L9
                MOV     AH,2
                XOR     BH,BH
                INT     10H             ;SET CURSOR POSITION
                MOV     AH,1
                INT     16H
                JZ      .L1
                XOR     AH,AH
                INT     16H
                XCHG    AL,AH
                CMP     AL,1
                JB      .L1
                JNZ     .L4
.L9:            XOR     BX,BX           ;Esc
                RETN
.L4:            MOV     BX,CHR_TRT1
                CMP     AL,12
                JA      .L2
                
                PUSH    AX
                MOV     AH,2
                INT     16H
                TEST    AL,3
                POP     AX
                MOV     BX,CHR_TRT2
                JNZ     .L8
                MOV     BX,CHR_TRT1
.L8:            PUSH    DI
                SUB     DI,SI
                CMP     DI,16
                POP     DI
                JZ      .L1
                XLATB
                INC     DX
                CALL    HIDEM
                MOV     AH,7
                STOSW
                CALL    SHOWM
.L1A:           JMP     .L1

.L2:            CMP     AL,14           ;BackSpace?
                JNZ     .L3
                CMP     SI,DI           
                JZ      .L1
                DEC     DX
                SUB     DI,2
                MOV     AL,' '
                CALL    HIDEM
                MOV     AH,7
                MOV     [ES:DI],AX
                CALL    SHOWM
                JMP     .L1

.L3:            CMP     AL,16           ;Tab?
                JB      .L1
                CMP     AL,25
                JBE     .L8
                CMP     AL,28           ;Enter?
                JNZ     .L6

                MOV     BX,D_BUF2
.L7:            MOV     AL,[ES:SI]
                MOV     [BX],AL
                ADD     SI,2
                INC     BX
                CMP     SI,DI
                JBE     .L7
                MOV     BYTE [BX-1],'.'
                SUB     BX,D_BUF2
                RETN

.L6:            CMP     AL,30
                JB      .L1
                CMP     AL,38
                JBE     .L8
                CMP     AL,44
                JB      .L1A
                CMP     AL,50
                JA      .L1A
                JMP     .L8

TOGG_CUR3:      MOVZX   SI,[CP_IN_WIN3]
                MOV     CX,3
                SHL     SI,CL
                ADD     SI,160*6+55
.L1:            ROL     BYTE [ES:SI],4
                ADD     SI,2
                LOOP    .L1
                RETN

MAIN_DSCR:      MOV     DI,160*3+44
                MOV     SI,M3_MSG4
                MOV     CX,18
                MOV     BX,1
                CALL    OUT_MSG
                MOV     DI,160*5+50
                MOV     SI,M3_MSG2
                MOV     CX,12
                INC     BX
                CALL    OUT_MSG
                CALL    TOGG_CUR3

MENU_DISP3:     CALL    SHOWM           ; OUT: SI=0 - OK, SI!=0 - ESC
.L1:            XOR     SI,SI
                CALL    WAITM
                MOV     AX,DX
                INC     SI
                TEST    BX,2
                JNZ     HIDEM
                DEC     SI
                TEST    BX,1
                JNZ     MOUSE_DISP3

                MOV     AH,1
                INT     16H
                JZ      .L1
                XOR     AH,AH
                INT     16H
                CALL    HIDEM

                CMP     AH,4BH          ; LEFT?
                JZ      MD3_LEFT

                CMP     AH,4DH          ; RIGHT?
                JZ      MD3_RIGHT

                CMP     AH,1CH          ; ENTER?
                JZ      MD3_ENTER

                INC     SI
                CMP     AH,1            ; ESC?
                JNZ     MENU_DISP3
                RETN

MD3_LEFT:       CALL    TOGG_CUR3
                DEC     [CP_IN_WIN3]
                JNS     .L1
                INC     [CP_IN_WIN3]
.L1:            CALL    TOGG_CUR3
                JMP     MENU_DISP3

MD3_RIGHT:      CALL    TOGG_CUR3
                CMP     [CP_IN_WIN3],2
                JZ      .L1
                INC     [CP_IN_WIN3]
.L1:            CALL    TOGG_CUR3
                JMP     MENU_DISP3

MOUSE_DISP3:    CALL    HIDEM
                SHR     AX,3
                SHR     CX,3
                CMP     AL,6
                JNZ     MENU_DISP3
                SUB     CL,27
                JS      MENU_DISP3
                CMP     CL,3
                JZ      MENU_DISP3
                CMP     CL,7
                JZ      MENU_DISP3
                CMP     CL,10
                JA      MENU_DISP3
                SHR     CX,2
                MOV     [CP_IN_WIN3],CL

MD3_ENTER:      MOV     WORD [DEV],'07'
                MOV     AL,[CP_IN_WIN3]
                ADD     [DEV+1],AL
                OR      AL,AL
                JNZ     .L1
                MOV     WORD [DEV],'**'
.L1:            RETN

TOGG_CUR4:      MOVZX   SI,[CP_IN_WIN4]
                MOV     CX,4
                IMUL    SI,10
                ADD     SI,160*6+57
.L1:            ROL     BYTE [ES:SI],4
                ADD     SI,2
                LOOP    .L1
                RETN

MAIN_SCR4:      MOV     DI,160*3+44
                MOV     SI,M3_MSG6
                MOV     CX,18
                MOV     BX,1
                CALL    OUT_MSG
                MOV     DI,160*5+52
                MOV     SI,M3_MSG5
                MOV     CX,10
                MOV     BX,1
                CALL    OUT_MSG
                CALL    TOGG_CUR4

MENU_DISP4:     CALL    SHOWM           ; OUT: SI=0 - OK, SI!=0 - ESC
.L1:            XOR     SI,SI
                CALL    WAITM
                MOV     AX,DX
                INC     SI
                TEST    BX,2
                JNZ     HIDEM
                DEC     SI
                TEST    BX,1
                JNZ     MOUSE_DISP4

                MOV     AH,1
                INT     16H
                JZ      .L1
                XOR     AH,AH
                INT     16H
                CALL    HIDEM

                CMP     AH,4BH          ;LEFT?
                JZ      MD4_LEFT

                CMP     AH,4DH          ;RIGHT?
                JZ      MD4_RIGHT

                CMP     AH,1CH          ;ENTER?
                JZ      MD4_ENTER

                INC     SI
                CMP     AH,1            ;ESC?
                JNZ     MENU_DISP4
MD4_ENTER:      RETN

MD4_LEFT:       CALL    TOGG_CUR4
                DEC     [CP_IN_WIN4]
                JNS     .L1
                INC     [CP_IN_WIN4]
.L1:            CALL    TOGG_CUR4
                JMP     MENU_DISP4

MD4_RIGHT:      CALL    TOGG_CUR4
                CMP     [CP_IN_WIN4],1
                JZ      .L1
                INC     [CP_IN_WIN4]
.L1:            CALL    TOGG_CUR4
                JMP     MENU_DISP4

MOUSE_DISP4:    CALL    HIDEM
                SHR     AX,3
                SHR     CX,3
                CMP     AL,6
                JNZ     MENU_DISP4
                SUB     CL,28
                JS      MENU_DISP4
                CMP     CL,4
                JZ      MENU_DISP4
                CMP     CL,8
                JA      MENU_DISP4
                SHR     CX,2
                MOV     [CP_IN_WIN4],CL
                RETN

TOGG_CUR5:      MOVZX   SI,AL           ;AL-X, AH-Y
                MOV     CX,5            ;USE: CX,SI
                IMUL    SI,14
                ADD     SI,160*4+47
                OR      AH,AH
                JZ      .L1
                ADD     SI,160
.L1:            ROL     BYTE [ES:SI],4
                ADD     SI,2
                LOOP    .L1
                RETN

MAIN_SCR5:      MOV     AX,WORD [CP_IN_WIN5U]
                MOV     WORD [JOY1_ST],AX
                MOV     DI,160*3+18
                MOV     SI,M3_MSG7
                MOV     CX,46
                MOV     [CP_IN_WIN5X],AL
                MOV     [CP_IN_WIN5Y],CH
                MOV     BX,3
                CALL    OUT_MSG
                MOV     DI,160*7+60
                MOV     SI,M3_MSG8
                MOV     CX,3
                MOV     BX,1
                CALL    OUT_MSG
                MOVZX   AX,[CP_IN_WIN5U]
                CALL    TOGG_CUR5
                MOV     AL,[CP_IN_WIN5D]
                INC     AH
                CALL    TOGG_CUR5

MENU_DISP5:     CALL    SHOWM           ;OUT: SI=0 - OK, SI!=0 - ESC
.L1:            XOR     SI,SI
                CALL    WAITM
                MOV     AX,DX
                INC     SI
                TEST    BX,2
                JNZ     HIDEM
                DEC     SI
                TEST    BX,1
                JNZ     MOUSE_DISP5

                MOV     AH,1
                INT     16H
                JZ      .L1
                XOR     AH,AH
                INT     16H
                CALL    HIDEM

                CMP     AH,4BH          ;LEFT?
                JZ      MD5_LEFT

                CMP     AH,4DH          ;RIGHT?
                JZ      MD5_RIGHT

                CMP     AH,48H          ;UP?
                JZ      MD5_UP

                CMP     AH,50H          ;DOWN?
                JZ      MD5_DOWN

                CMP     AH,1CH          ;ENTER?
                JZ      MD5_ENTER

                INC     SI
                CMP     AH,1            ;ESC?
                JNZ     MENU_DISP5
                RETN

MD5_ENTER:      MOV     AX,WORD [JOY1_ST]
                CMP     AL,4
                JZ      .L1
                CMP     AH,AL
                JZ      MENU_DISP5
.L1:            MOV     WORD [CP_IN_WIN5U],AX
                JMP     INIT_JOY

MD5_LEFT:       MOV     AX,WORD [CP_IN_WIN5X]
                CALL    TOGG_CUR5
                DEC     AL
                JNS     .L1
                INC     AL
.L1:            JMP     MD5_RIGHT.L1

MD5_RIGHT:      MOV     AX,WORD [CP_IN_WIN5X]
                CALL    TOGG_CUR5
                CMP     AL,4
                JZ      .L1
                INC     AL

.L1:            MOV     WORD [CP_IN_WIN5X],AX
                CALL    TOGG_CUR5
                OR      AH,AH
                JZ      .L2
                MOV     [JOY2_ST],AL
                JMP     MENU_DISP5
.L2:            MOV     [JOY1_ST],AL
                JMP     MENU_DISP5

MD5_UP:         DEC     [CP_IN_WIN5Y]
                JNS     .L1
                INC     [CP_IN_WIN5Y]
.L1:            MOV     AL,[JOY1_ST]
                MOV     [CP_IN_WIN5X],AL
                JMP     MENU_DISP5

MD5_DOWN:       CMP     [CP_IN_WIN5Y],1
                JZ      .L1
                INC     [CP_IN_WIN5Y]
.L1:            MOV     AL,[JOY2_ST]
                MOV     [CP_IN_WIN5X],AL
                JMP     MENU_DISP5

MOUSE_DISP5:    CALL    HIDEM
                SHR     AX,3
                SHR     CX,3
                CMP     AL,8
                JZ      .L2
                SUB     AL,4
                JZ      .L1
                CMP     AL,1
                JNZ     MENU_DISP5
.L1:            SUB     CL,23
                JS      MENU_DISP5
                CMP     CL,34
                JAE     MENU_DISP5
                PUSH    AX
                PUSH    CX
                POP     AX
                MOV     CL,7
                DIV     CL
                MOV     CL,AL
                CMP     AH,5
                POP     AX
                JAE     MENU_DISP5
                XCHG    AL,AH
                MOV     AL,CL
                MOV     DX,AX
                MOV     AX,WORD [CP_IN_WIN5X]
                CMP     AH,DH
                JZ      .L3
                MOV     AH,DH
                MOV     AL,[JOY1_ST]
                OR      DH,DH
                JZ      .L3
                MOV     AL,[JOY2_ST]
.L3:            CALL    TOGG_CUR5
                MOV     AX,DX
                JMP     MD5_RIGHT.L1

.L2:            SUB     CL,30
                JBE     MENU_DISP5
                CMP     CL,4
                JA      MENU_DISP5
                JMP     MD5_ENTER

