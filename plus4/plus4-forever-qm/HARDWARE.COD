INTR23:         PUSH    DS
                PUSH    AX
                MOV     AX,SEG SEG_DATA
                MOV     DS,AX
                INC     [BREAK_FLAG]
                POP     AX
                POP     DS
                IRET

INTR24:         MOV     AL,3
                IRET

SET_INTR24:     MOV     AX,3524H        ;SAVE/SET INTR24 VECTOR
                INT     21H
                MOV     [SAVE24LO],BX
                MOV     [SAVE24HI],ES
                PUSH    DS
                PUSH    CS
                POP     DS
                MOV     DX,INTR24
.L1:            MOV     AX,2524H
                INT     21H
                POP     DS
                RETN

RESTORE_INTR24: MOV     DX,[SAVE24LO]   ;RESTORE INTR24 VECTOR
                PUSH    DS
                MOV     DS,[SAVE24HI]
                JMP     SET_INTR24.L1


SET_INTR23:     MOV     AX,3523H        ;SAVE/SET INTR23 VECTOR
                INT     21H
                MOV     [SAVE23LO],BX
                MOV     [SAVE23HI],ES
                PUSH    DS
                PUSH    CS
                POP     DS
                MOV     DX,INTR23
.L1:            MOV     AX,2523H
                INT     21H
                POP     DS
                RETN

RESTORE_INTR23: MOV     DX,[SAVE23LO]   ;RESTORE INTR23 VECTOR
                PUSH    DS
                MOV     DS,[SAVE23HI]
                JMP     SET_INTR23.L1

GET_DELAYCONST: XOR     EDX,EDX         ;approx. 50mks for 37kHz timer
                MOV     EAX,[SYNCHRO_TICKS]
.L2:            CMP     EAX,[SYNCHRO_TICKS]
                JZ      .L2
                INC     EAX
.L1:            INC     EDX
                CMP     EAX,[SYNCHRO_TICKS]
                JZ      .L1
                SHL     EDX,1
                MOV     [DELAYCONST],EDX
                RETN

SET_VMODE:      MOV     AX,13H
                INT     10H
                CLI
                MOV     DX,3CEH ;SET 128KB VIDEO RAM MODE
                MOV     AL,6
                OUT     DX,AL
                MOV     AH,AL
                INC     DX
                IN      AL,DX
                AND     AL,0F3H
                XCHG    AL,AH
                DEC     DX
                OUT     DX,AX
                XOR     AX,AX   ;PROVIDE ACCESS TO THE CRTC REGISTERS
                MOV     ES,AX
                MOV     DX,[ES:463H]
                MOV     AL,11H
                OUT     DX,AL
                MOV     AH,AL
                INC     DX
                IN      AL,DX
                MOV     BL,AL
                ;AND     AL,7FH
                ;XCHG    AL,AH
                DEC     DX
                ;OUT     DX,AX           ;DISABLE WRITE PROTECTION
                ;MOV     AX,5101H        ;SET THE HORIZONTAL REGISTERS
                ;OUT     DX,AX
                ;MOV     AX,5202H
                ;OUT     DX,AX
                ;MOV     AX,2A13H
                ;OUT     DX,AX
                MOV     AX,0A210H       ;SET THE VERTICAL REGISTERS
                OUT     DX,AX
                MOV     AX,9D12H
                OUT     DX,AX
                MOV     AX,0A015H
                OUT     DX,AX
                MOV     AL,11H
                MOV     AH,BL
                AND     AH,0F0H
                OR      AH,4
                OUT     DX,AX
                STI
                RETN

FINISHIBM:      XOR     AX,AX           ;RESTORE LED
                MOV     ES,AX
                MOV     AL,[ES:417H]
                AND     AL,0CFH
                OR      AL,[KBD_FLAGS]
                MOV     [ES:417H],AL
                AND     AL,70H
                MOV     [LED],AL
                CALL    SET_LED

                CALL    RESTORE_INTR9
                CALL    RESTORE_INTR8
                CALL    [EXIT_SOUND]
                CALL    RESTORE_INTR24
                CALL    RESTORE_INTR23

                CALL    RESET_DS

                MOV     DL,[SAVE_FPATH]   ;RESTORE STARTUP PATH & DRIVE
                MOV     AH,0EH
                SUB     DL,'A'
                INT     21H
                MOV     AH,3BH
                MOV     DX,SAVE_FPATH
                INT     21H

                MOV     AX,3            ;SET TEXT VIDEO MODE
                INT     10H

                MOV     EAX,[RETRACE_COUNT]
                MOV     EDX,11931800/TIMERV
                MUL     EDX
                DIV     [SYNCHRO_TICKS]
                SHL     EDX,1
                CMP     EDX,[SYNCHRO_TICKS]
                JB      .L1
                INC     EAX
.L1:            CALL    HEX2DEC
                MOV     EAX,DWORD [D_BUF1+6]
                MOV     WORD [FMSG+44],AX
                SHR     EAX,16
                MOV     [FMSG+46],AL
                MOV     [FMSG+48],AH

                MOV     DX,AMSG         ;OUTPUT AUTHOR'S MESSAGE
                MOV     AH,9
                INT     21H

                MOV     DX,FMSG         ;OUTPUT AUTHOR'S MESSAGE
                MOV     AH,9
                INT     21H

                RETN

INITIBM:        CLD
                MOV     AX,SEG SEG_RAM  ; INIT FS
                MOV     FS,AX
                MOV     AH,30H          ; TEST DOS VERSION
                INT     21H
                XCHG    AL,AH
                CMP     AX,31EH         ; DOS >= 3.30
                JNC     .L3
                MOV     DX,ERROR1
                MOV     AH,9
                INT     21H
                POP     AX              ;EXIT!!!
                RETF

.L3:            XOR     AX,AX           ;TEST MOUSE PRESENCE
                INT     33H
                MOV     [ISMOUSE],AL

                XOR     EBX,EBX         ;INIT 32-BIT REGISTERS
                XOR     ESI,ESI
                XOR     ECX,ECX
                XOR     EDI,EDI
                XOR     ECX,ECX

                CALL    SET_VMODE       ;SET VIDEO MODE

                PUSH    DS              ;INIT DAC = SET PALETTE
                POP     ES
                XOR     BX,BX
                MOV     CX,128
                MOV     AX,1012H
                MOV     DX,DAC_T
                INT     10H
                MOV     BX,CX
                MOV     AX,1012H
                INT     10H

                CALL    SET_INTR23
                CALL    SET_INTR24
                CALL    SET_INTR9

                CALL    SET_INTR8
;                CALL    SET_ADLIBSND
                CALL    SET_TIMERSND
                CALL    [RESET_SOUND]

                CALL    INIT_JOY

                XOR     SI,SI           ;LOAD ROMs
                MOV     DI,SEG SEG_ROM
.L2:            MOV     AX,3D00H
                LEA     DX,[ROMS_FN+SI]
                INT     21H
                JC      .L5
                MOV     BX,AX
                MOV     AX,4202H
                XOR     CX,CX
                XOR     DX,DX
                INT     21H
                OR      DX,DX
                JNZ     .L1
                CMP     AX,16*1024
                JNZ     .L1
                MOV     AX,4200H
                INT     21H
                PUSH    DS
                MOV     AH,3FH
                MOV     CX,16*1024
                XOR     DX,DX
                MOV     DS,DI
                INT     21H
                POP     DS
.L1:            MOV     AH,3EH
                INT     21H
.L5:            ADD     SI,11
                ADD     DI,400H
                CMP     SI,11*8
                JNZ     .L2

                MOV     AH,47H          ;SAVE STARTUP PATH & DRIVE
                MOV     SI,SAVE_FPATH+3
                XOR     DL,DL
                INT     21H
                MOV     AH,19H
                INT     21H
                ADD     AL,41H
                MOV     [SAVE_FPATH],AL
                MOV     [FPATH],AL      ;+ SET CURRENT DRIVE LETTER
                MOV     AX,':\'
                MOV     WORD [SAVE_FPATH+1],AX
                MOV     WORD [FPATH+1],AX

                CALL    GET_DRVS        ;INIT MENUS
                CALL    GET_FPATH
                CALL    INIT_WIN1

                CALL    GET_DELAYCONST

                XOR     AX,AX
                MOV     ES,AX
                MOV     AL,[ES:417H]
                MOV     [KBD_FLAGS],AL
                AND     [KBD_FLAGS],30H
                AND     BYTE [ES:417H],0CFH
                AND     AL,40H
                JZ      .L4
                AND     [KMATRIX+1],7FH
.L4:            MOV     [LED],AL
                CALL    SET_LED

                MOV     AX,0A000H       ;Init ES For TED
                MOV     ES,AX
                RETN

