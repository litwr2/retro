MENUS_ENTRY:    CALL    INIT_MENUS
                CALL    MENU_DISP1
                CALL    END_MENUS
                JMP     MAIN_ENTRY

HIDEM:          CMP     ISMOUSE,0
                JE      SHORT NOMOUSE1
                PUSH    AX
                MOV     AX,2
                INT     33H
                POP     AX
NOMOUSE1:       RETN

SHOWM:          CMP     ISMOUSE,0
                JE      SHORT NOMOUSE2
                MOV     AX,1
                INT     33H
NOMOUSE2:       RETN

WAITM:          XOR     BX,BX
                CMP     ISMOUSE,BL
                JE      NOMOUSE3
                MOV     AX,3
                INT     33H
                OR      BX,BX
                JZ      SHORT NOMOUSE3
                PUSH    BX
WAITM_L1:       MOV     AX,3
                INT     33H
                OR      BX,BX
                JNZ     SHORT WAITM_L1
                POP     BX
NOMOUSE3:       RETN

CUROFF:         MOV     AH,2            ; HIDE CURSOR
                XOR     BH,BH
                MOV     DX,1900H
                INT     10H
                RETN

INIT_MENUS:     NOT     CS:TIMER_ST
                CALL    SAVE_TED
                MOV     AX,3            ; SET VIDEO MODE
                INT     10H
                MOV     ES,DS_BUF_PTR+2 ; LOAD CBM FONTS
                PUSH    DS
                XOR     DI,DI
                MOV     AX,SEG SEG_ROM +0500H
                MOV     BP,DI           ;TRASFORM FONT SIZE: 8x8 -> 8x16
                MOV     DS,AX
                XOR     SI,SI
                MOV     CX,256*8
IM_L1:          LODSB
                MOV     AH,AL
                STOSW
                LOOP    SHORT IM_L1
                POP     DS
                MOV     AX,1100H
                INC     CH
                XOR     DX,DX
                MOV     BX,1001H
                INT     10H
                MOV     AX,1103H        ;SET TWO FONTS SET
                MOV     BL,4
                INT     10H
                MOV     AX,1015H        ;ADJUST PALETTE (SUPRESS HIGHLIGHT)!
                MOV     BX,7
                INT     10H
                MOV     AX,1010H
                MOV     BX,63
                INT     10H
                MOV     AX,1010H
                MOV     BX,3
                MOV     CL,3FH
                MOV     CH,CL
                MOV     DH,CL
                INT     10H
                CALL    CUROFF
                MOV     AX,0B800H       ;SET ES
                MOV     ES,AX
                CALL    INIT_SCROLL
                CALL    FILL_IBM_FLIST
                JMP     PLOT_SCR1

END_MENUS:      NOT     CS:TIMER_ST
                CALL    RESTORE_TED
EM_L1:          CMP     PREV_KEY,44H
                JZ      SHORT EM_L1
                MOV     KBUFA,0
                RETN

GET_DRVS:       MOV     AH,19H
                INT     21H
                MOV     DL,AL
                MOV     AH,0EH
                INT     21H
                MOVZX   CX,AL
                XOR     SI,SI
                MOV     EDX,']:A['
                MOV     BX,1
GD_L3:          MOV     AX,440EH
                INT     21H
                JC      SHORT GD_L1
                OR      AL,AL
                JNZ     SHORT GD_L2
GD_L4:          MOV     DH,BL
                ADD     DH,64
                MOV     WORD PTR IBM_DV_LIST[ESI*2],'  '
                MOV     DWORD PTR IBM_FN_LIST[ESI*8],EDX
                MOV     DWORD PTR IBM_FN_LIST[ESI*8+4],'    '
                MOV     IBM_SZ_LIST[ESI*4],-1
                INC     SI
GD_L5:          INC     BX
                CMP     BL,CL
                JBE     SHORT GD_L3
                SUB     BL,CH
                DEC     BX
                MOV     TOT_DRVS,BX
                RETN
GD_L2:          CMP     AL,BL
                JZ      SHORT GD_L4
GD_L1:          INC     CH
                JMP     SHORT GD_L5

HEX2DEC:        MOV     EBX,1000000000  ; IN: EAX - HEX ; USED: BX, EDX
                PUSH    CX              ; OUT: ->D_BUF1
                PUSH    SI
                XOR     EDX,EDX
                LEA     SI,D_BUF1
                DIV     EBX
                OR      AL,30H
                MOV     [SI],AL
                XOR     AL,AL
                MOV     EBX,100000000
                XCHG    EAX,EDX
                INC     SI
                DIV     EBX
                OR      AL,30H
                MOV     [SI],AL
                XOR     AL,AL
                MOV     EBX,10000000
                XCHG    EAX,EDX
                INC     SI
                DIV     EBX
                OR      AL,30H
                MOV     [SI],AL
                XOR     AL,AL
                MOV     EBX,1000000
                XCHG    EAX,EDX
                INC     SI
                DIV     EBX
                OR      AL,30H
                MOV     [SI],AL
                XOR     AL,AL
                MOV     EBX,100000
                XCHG    EAX,EDX
                INC     SI
                DIV     EBX
                OR      AL,30H
                MOV     [SI],AL
                XOR     AL,AL
                MOV     EBX,10000
                XCHG    EAX,EDX
                INC     SI
                DIV     EBX
                OR      AL,30H
                MOV     [SI],AL
                XOR     AL,AL
                MOV     BX,1000
                XCHG    AX,DX
                INC     SI
                DIV     BX
                OR      AL,30H
                MOV     [SI],AL
                XOR     AL,AL
                MOV     BX,100
                XCHG    AX,DX
                INC     SI
                DIV     BX
                OR      AL,30H
                MOV     [SI],AL
                MOV     BL,10
                XCHG    AL,DL
                INC     SI
                DIV     BL
                OR      AX,3030H
                MOV     [SI],AX
                SUB     SI,8
                MOV     CX,9
H2D_L2:         LODSB
                CMP     AL,30H
                JNZ     SHORT H2D_L1

                MOV     AL,20H
                MOV     [SI-1],AL
                LOOP    SHORT H2D_L2
H2D_L1:         POP     SI
                POP     CX
                RETN

SET_FPATH:      MOV     AH,3BH
                LEA     DX,FPATH
                INT     21H
GET_FPATH:      MOV     AH,47H
                LEA     SI,FPATH+3
                XOR     DL,DL
                INT     21H
                PUSH    ES              ; SET FPATH LENGTH
                PUSH    DS
                POP     ES
                MOV     CL,68
                XOR     AX,AX
                LEA     DI,FPATH
                REPNZ   SCASB
                MOV     AX,'\'
                CMP     ES:[DI-2],AL
                JZ      SHORT GF_L1

                DEC     DI
                STOSW
GF_L1:          SUB     DI,OFFSET FPATH+1
                MOV     AX,DI
                MOV     FPATH_LEN,AL
                POP     ES
                RETN

CBM_ASCII2:     MOV     BX,21
CAC1_L4:        MOV     CX,DX
CAC1_L3:        MOV     AL,ES:[DI]
                CMP     AL,20H
                JB      SHORT CAC1_L1
                CMP     AL,0FFH
                JZ      SHORT CAC1_L6
                CMP     AL,40H
                JB      SHORT CAC1_L2
                CMP     AL,80H
                JB      SHORT CAC1_L5
                CMP     AL,0A0H
                JB      SHORT CAC1_L1
                CMP     AL,0C0H
                JAE     SHORT CAC1_L2
CAC1_L5:        ADD     AL,40H
CAC1_L2:        STOSB
                INC     DI
                LOOP    SHORT CAC1_L3
                ADD     DI,SI
                DEC     BX
                JNZ     SHORT CAC1_L4
                RETN
CAC1_L1:        MOV     AL,' '
                JMP     SHORT CAC1_L2
CAC1_L6:        MOV     AL,0DEH
                JMP     SHORT CAC1_L2

CBM_ASCII1:     MOV     BX,21
CAC2_L4:        MOV     CX,DX
CAC2_L3:        MOV     AL,ES:[DI]
                CMP     AL,20H
                JB      SHORT CAC2_L1
                CMP     AL,0FFH
                JZ      SHORT CAC2_L6
                CMP     AL,40H
                JB      SHORT CAC2_L2
                CMP     AL,60H
                JB      SHORT CAC2_L5
                CMP     AL,80H
                JB      SHORT CAC2_L7
                CMP     AL,0A0H
                JB      SHORT CAC2_L1
                CMP     AL,0C0H
                JB      SHORT CAC2_L5
                SUB     AL,40H
CAC2_L5:        SUB     AL,40H
CAC2_L2:        STOSB
                INC     DI
                LOOP    SHORT CAC2_L3
                ADD     DI,SI
                DEC     BX
                JNZ     SHORT CAC2_L4
                RETN
CAC2_L1:        MOV     AL,' '
                JMP     SHORT CAC2_L2
CAC2_L6:        MOV     AL,5EH
                JMP     SHORT CAC2_L2
CAC2_L7:        SUB     AL,20H
                JMP     SHORT CAC2_L2

INIT_SCROLL:    MOV     DI,SCROLL_TOP_Y*160+SCROLL_TOP_X*2
                MOV     AH,7
                MOV     BX,19
                LEA     SI,SCROLL_TXT
IN_SC_L1:       MOV     CX,6
IN_SC_L2:       LODSB
                STOSW
                LOOP    SHORT IN_SC_L2
                ADD     DI,160-12
                DEC     BX
                JNZ     SHORT IN_SC_L1
                RETN

OUT_MSG:        MOV     AX,'É'+7*256    ; IN: BX,CX,SI,DI  USED: AX
                STOSW
                PUSH    CX
                MOV     AL,'Í'
                INC     CX
                REP     STOSW
                MOV     AL,'»'
                STOSW
O_M_L5:         POP     CX
                ADD     DI,154
                SUB     DI,CX
                SUB     DI,CX
                PUSH    CX
                MOV     AL,'º'
                STOSW
                MOV     AL,' '
                STOSW
O_M_L2:         LODSB
                STOSW
                LOOP    SHORT O_M_L2
                MOV     AL,'º'
                STOSW
                DEC     BX
                JNZ     SHORT O_M_L5
                POP     CX
                ADD     DI,154
                SUB     DI,CX
                SUB     DI,CX
                MOV     AL,'È'
                STOSW
                INC     CX
                MOV     AL,'Í'
                REP     STOSW
                MOV     AL,'¼'
                STOSW
                RETN

WAIT_ACTIVITY:  CALL    SHOWM
W_A_L4:         CALL    WAITM
                TEST    BX,7
                JNZ     SHORT W_A_L3

                MOV     AH,1
                INT     16H
                JZ      SHORT W_A_L4
                XOR     AH,AH
                INT     16H
W_A_L3:         JMP     HIDEM

MAKE_FNAME:     PUSH    BX                    ;INPUT: BX - FLIST POINTER
                LEA     SI,IBM_FN_LIST[EBX*8] ;ES MUST BE EQUAL TO DS!!!
                LEA     DI,D_BUF1
                MOV     CX,8
M_FN_L2:        MOVSB
                CMP     BYTE PTR [SI],' '
                JZ      SHORT M_FN_L1
                LOOP    SHORT M_FN_L2
M_FN_L1:        IMUL    BX,3
                LEA     SI,IBM_EX_LIST[BX]
                CMP     BYTE PTR [SI],' '
                JZ      SHORT M_FN_L3
                MOV     BYTE PTR [DI],'.'
                INC     DI
                MOV     CL,3
M_FN_L4:        CMP     BYTE PTR [SI],' '
                JZ      SHORT M_FN_L3
                MOVSB
                LOOP    SHORT M_FN_L4
M_FN_L3:        MOV     BYTE PTR [DI],CH
                POP     BX
                RETN

SAV_FPATH:      XOR     SI,SI
SAV_FP_L1:      MOV     AL,FPATH[SI]
                MOV     D_BUF2[SI],AL
                INC     SI
                OR      AL,AL
                JNZ     SHORT SAV_FP_L1
                RETN
